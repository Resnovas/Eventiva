{
  "name": "eventiva",
  "version": "0.0.0",
  "description": "Imagine a place where you can find all your event vendors, venues and professionals, alongside all the tools you require to be successful within the live events market. ",
  "main": "./build/packages/main/typescript/index.js",
  "typings": "./build/packages/main/typescript/index.d.ts",
  "module": "./build/packages/module/typescript/index.js",
  "repository": "https://github.com/videndum/eventiva",
  "license": "MIT",
  "keywords": [],
  "private": true,
  "scripts": {
    "prefirstinstall": "node ./scripts/preinstall.js",
    "firstinstall": "pnpm install && npm install -g ./src/apps/cli/ && run-p script:*",
    "script:prismix": "pnpm prismix",
    "script:prisma": "pnpm -C src/functions/database prisma:generate",
    "start:functions:database": "functions-framework --target=handler --source=build/functions/main/database",
    "start:functions:domain": "functions-framework --target=handler --source=build/functions/main/domain",
    "preinstall": "node ./scripts/preinstall.js",
    "prebuild": "run-p script:*",
    "build": "run-p build:*",
    "build:maincli": "tsc -p .tsconfig/tsconfig.main.cli.json",
    "build:modulecli": "tsc -p .tsconfig/tsconfig.module.cli.json",
    "build-:maininterface": "tsc -p .tsconfig/tsconfig.main.interface.json",
    "build-:moduleinterface": "tsc -p .tsconfig/tsconfig.module.interface.json",
    "build:mainfunctions": "tsc -p .tsconfig/tsconfig.main.functions.json",
    "build:modulefunctions": "tsc -p .tsconfig/tsconfig.module.functions.json",
    "build:mainpackages": "tsc -p .tsconfig/tsconfig.main.packages.json",
    "build:modulepackages": "tsc -p .tsconfig/tsconfig.module.packages.json",
    "postbuild": "node ./scripts/openapi.js",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:lint": "eslint src --ext .ts --fix",
    "test": "run-s build test:*",
    "test:lint": "eslint src --ext .ts",
    "test:prettier": "prettier \"src/**/*.ts\" --list-different",
    "test:spelling": "cspell \"{README.md,.github/*.md,src/**/*.ts}\"",
    "doc:start": "set NODE_OPTIONS=--openssl-legacy-provider & docusaurus start",
    "doc:build": "docusaurus build",
    "doc:swizzle": "docusaurus swizzle",
    "doc:deploy": "docusaurus deploy",
    "doc:clear": "docusaurus clear",
    "doc:serve": "docusaurus serve",
    "doc:write-translations": "docusaurus write-translations",
    "doc:write-heading-ids": "docusaurus write-heading-ids",
    "wip": "wip",
    "wip:finish": "naenae",
    "wip:watch": "wip silently && watch wip --ignoreDotFiles --ignoreDirectoryPatterttern=[\"/node_modules/\"]",
    "reset-hard": "git clean -dfx && git reset --hard",
    "prepare-release": "run-s reset-hard test cov:check doc:html version doc:publish",
    "unused:test:unit": "nyc --silent ava",
    "unused:watch:test": "nyc --silent ava --watch",
    "unused:check-cli": "run-s test diff-integration-tests check-integration-tests",
    "unused:check-integration-tests": "run-s check-integration-test:*",
    "unused:diff-integration-tests": "mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'",
    "unused:watch:build": "tsc -p tsconfig.json -w",
    "unused:cov": "run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html",
    "unused:cov:html": "nyc report --reporter=html",
    "unused:cov:lcov": "nyc report --reporter=lcov",
    "unused:cov:send": "run-s cov:lcov && codecov",
    "unused:cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100"
  },
  "engines": {
    "node": ">=10",
    "pnpm": ">=4"
  },
  "dependencies": {
    "@bitauth/libauth": "^1.17.1",
    "@docusaurus/core": "^2.0.0-beta.9",
    "@docusaurus/plugin-pwa": "^2.0.0-beta.9",
    "@docusaurus/preset-classic": "^2.0.0-beta.9",
    "@docusaurus/theme-live-codeblock": "^2.0.0-beta.9",
    "@easyops-cn/docusaurus-search-local": "^0.19.1",
    "@edno/docusaurus2-graphql-doc-generator": "^1.5.1",
    "@graphql-tools/prisma-loader": "^7.1.0",
    "@mdx-js/react": "^1.6.21",
    "@saucelabs/theme-github-codeblock": "^0.1.1",
    "@svgr/webpack": "^5.5.0",
    "@types/jest": "^27.0.2",
    "clsx": "^1.1.1",
    "docusaurus-plugin-module-alias": "^0.0.2",
    "docusaurus-plugin-moesif": "^1.0.0",
    "docusaurus-plugin-react-native-web": "^1.0.0",
    "docusaurus-plugin-relative-paths": "^1.0.0",
    "docusaurus-plugin-typedoc": "^0.16.3",
    "docusaurus2-dotenv": "^1.4.0",
    "file-loader": "^6.2.0",
    "mdx-mermaid": "^1.1.1",
    "mermaid": "^8.13.3",
    "posthog-docusaurus": "^1.0.3",
    "prism-react-renderer": "^1.2.1",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "redocusaurus": "^0.4.6",
    "typedoc-plugin-markdown": "^3.11.3",
    "url-loader": "^4.1.1"
  },
  "devDependencies": {
    "@ava/typescript": "^1.1.1",
    "@changesets/cli": "^2.18.0",
    "@google-cloud/functions-framework": "^1.7.1",
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@typescript-eslint/eslint-plugin": "^4.0.1",
    "@typescript-eslint/parser": "^4.0.1",
    "ava": "^3.12.1",
    "codecov": "^3.5.0",
    "commitizen": "^4.2.4",
    "concurrently": "^6.2.0",
    "cspell": "^4.1.0",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.8.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-functional": "^3.0.2",
    "eslint-plugin-import": "^2.22.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "open-cli": "^6.0.1",
    "prettier": "^2.1.1",
    "prettier-plugin-organize-imports": "^1.1.1",
    "prettier-plugin-pkg": "^0.8.0",
    "prisma": "^3.2.1",
    "prismix": "^1.0.20",
    "swagger-jsdoc": "^6.1.0",
    "ts-node": "^9.0.0",
    "typedoc": "^0.22.8",
    "typescript": "^4.0.2",
    "typescript-json-schema": "^0.51.0",
    "watch": "1.0.2",
    "wip": "^1.3.0",
    "yaml": "^1.10.2"
  },
  "files": [
    "build/main",
    "build/module",
    "!**/*.spec.*",
    "!**/*.json",
    "CHANGELOG.md",
    "LICENSE",
    "README.md"
  ],
  "ava": {
    "failFast": true,
    "timeout": "60s",
    "typescript": {
      "rewritePaths": {
        "src/": "build/main/"
      }
    },
    "files": [
      "!build/module/**"
    ]
  },
  "prettier": {
    "singleQuote": true
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  }
}