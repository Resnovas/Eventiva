model Address {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation(fields: [accountId], references: [id], "address")
  accountId String
  phones Phone[]
  type AddressType

  // Address details
  coords String?
  street String[]
  city String?
  state String?
  country String?
  zipcode String?

  // facility details
  businessName String?
  name String?
  parking Boolean? @default(false)
  contacts ContactAtAddress[]
  website String?
  hoursOfOperation Json?
  rooms Room[]
  // hotel Hotel[]
  // restraunt Restraunt[]
  venueStyle VenueStyle[]
  featuresOfBuisness FeatureOfAddress[]
  features String[]
  details Json?

  public Boolean @default(false)
  primaryAccount Account? @relation(fields: [primaryaccountId], references: [id], "account")
  primaryaccountId String?
}

model ContactAtAddress {
  accountId String
  addressId String
  account Account @relation(fields: [accountId], references: [id])
  address Address @relation(fields: [addressId], references: [id])

  jobTitle String?
  phone String?
  email Email? @relation(fields: [emailId], references: [id])
  emailId String?
  
  @@id([accountId, addressId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VenueStyle {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  address Address[]
  name String
  details String?
}

enum AddressType {
  PERSONAL
  BUSINESS
}