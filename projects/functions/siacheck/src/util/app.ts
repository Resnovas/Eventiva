/**
 * Project: @eventiva/siacheck
 * File: app.ts
 * Path: \src\util\app.ts
 * Created Date: Saturday, February 26th 2022
 * Author: Jonathan Stevens
 * -----
 * Last Modified: Thu Mar 10 2022
 * Modified By: Jonathan Stevens
 * Current Version: 2.0.0
 * -----
 * Copyright (c) 2022 Resnovas - All Rights Reserved
 * -----
 * LICENSE: GNU General Public License v3.0 or later (GPL-3.0+)
 *
 * This program has been provided under confidence of the copyright holder and is
 * licensed for copying, distribution and modification under the terms of
 * the GNU General Public License v3.0 or later (GPL-3.0+) published as the License,
 * or (at your option) any later version of this license.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License v3.0 or later for more details.
 *
 * You should have received a copy of the GNU General Public License v3.0 or later
 * along with this program. If not, please write to: jonathan@resnovas.com ,
 * or see http://www.gnu.org/licenses/gpl-3.0-standalone.html
 *
 * DELETING THIS NOTICE AUTOMATICALLY VOIDS YOUR LICENSE - PLEASE SEE THE LICENSE FILE FOR DETAILS
 * -----
 * HISTORY:
 * Date      	By	Comments
 * ----------	---	---------------------------------------------------------
 */

import express, { Express, Response, Request, NextFunction } from 'express';
import { ValidateError } from 'tsoa';
import bodyParser from 'body-parser';
import { RegisterRoutes } from './routes';
import swaggerUi from 'swagger-ui-express';
import { ErrorMessages } from './errors';

/**
 * The express application file used by all funtions.
 * Utilises TSOA, BodyParser, and Express.js.
 * @since 1.0.0
 * @version 2.0.0
 * @public
 */

/**
 * The Express application used by all function deployments
 */
export const app: Express = express();

/**
 * Use the swagger UI to view the API documentation
 */
app.use('/docs', swaggerUi.serve, swaggerUi.setup(require('../openapi.json')));

/**
 * Register the routes generated by TSOA
 */
RegisterRoutes(app);

/**
 * Handle errors thrown by TSOA
 */
app.use(function errorHandler(
  err: unknown,
  req: Request,
  res: Response,
  next: NextFunction
): Response | void {
  if (err instanceof ValidateError) {
    console.warn(`Caught Validation Error for ${req.path}:`, err.fields);
    return res.status(422).json({
      message: ErrorMessages[422],
      details: err?.fields,
    });
  }
  if (err instanceof Error) {
    return res.status(500).json({
      message: 'Internal Server Error',
      error: err,
    });
  }

  next();
});

/**
 * Handle not found routes and return a 404
 */
app.use(function notFoundHandler(_req, res: Response) {
  res.status(404).send({
    message: 'Not Found',
  });
});

/**
 * Use the body parser to parse the request body
 */
app.use(
  bodyParser.urlencoded({
    extended: true,
  })
);
app.use(bodyParser.json());
